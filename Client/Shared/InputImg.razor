@using System.IO
@using Blazor.FileReader
@inject IFileReaderService fileReaderService

<div>
    <label>@Label</label>
    <div>
        <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept=".jpg,.jpeg,.png" />
    </div>
</div>
<div>
    @if (ImageBase64 != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="data:image/jpeg;base64, @ImageBase64" style="width:400px;" />
            </div>
        </div>
    }
    @if (ImageTemp != null)
    {
        <div>
            <div style="margin:10px;">
                <img src="@ImageTemp" style="width:400px;" />
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public string Label { get; set; } = "Image";

    [Parameter]
    public string ImageTemp { get; set; }

    [Parameter]
    public EventCallback<string> SelectedImage { get; set; }

    private string ImageBase64;

    ElementReference inputElement;

    async Task ImageFileSelected()
    {
        foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 1024))
            {
                var bytesImagen = new byte[memoryStream.Length];
                memoryStream.Read(bytesImagen, 0, (int)memoryStream.Length);
                ImageBase64 = Convert.ToBase64String(bytesImagen);
                await SelectedImage.InvokeAsync(ImageBase64);
                ImageTemp = null;
                StateHasChanged();
            }
        }
    }
}
